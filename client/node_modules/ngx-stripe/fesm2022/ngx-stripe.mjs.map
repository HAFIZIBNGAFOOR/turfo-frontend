{"version":3,"file":"ngx-stripe.mjs","sources":["../../../projects/ngx-stripe/src/lib/directives/stripe-element-loading-template.directive.ts","../../../projects/ngx-stripe/src/lib/interfaces/ngx-stripe.interface.ts","../../../projects/ngx-stripe/src/lib/services/stripe-instance.class.ts","../../../projects/ngx-stripe/src/lib/services/window-ref.service.ts","../../../projects/ngx-stripe/src/lib/services/document-ref.service.ts","../../../projects/ngx-stripe/src/lib/services/api-loader.service.ts","../../../projects/ngx-stripe/src/lib/services/stripe.service.ts","../../../projects/ngx-stripe/src/lib/services/stripe-elements.service.ts","../../../projects/ngx-stripe/src/lib/directives/elements.directive.ts","../../../projects/ngx-stripe/src/lib/components/address.component.ts","../../../projects/ngx-stripe/src/lib/components/affirm-message.component.ts","../../../projects/ngx-stripe/src/lib/components/afterpay-clearpay-message.component.ts","../../../projects/ngx-stripe/src/lib/components/card.component.ts","../../../projects/ngx-stripe/src/lib/directives/card-group.directive.ts","../../../projects/ngx-stripe/src/lib/components/card-number.component.ts","../../../projects/ngx-stripe/src/lib/components/card-expiry.component.ts","../../../projects/ngx-stripe/src/lib/components/card-cvc.component.ts","../../../projects/ngx-stripe/src/lib/components/eps-bank.component.ts","../../../projects/ngx-stripe/src/lib/components/express-checkout.component.ts","../../../projects/ngx-stripe/src/lib/components/fpx-bank.component.ts","../../../projects/ngx-stripe/src/lib/components/iban.component.ts","../../../projects/ngx-stripe/src/lib/components/ideal-bank.component.ts","../../../projects/ngx-stripe/src/lib/components/issuing-card-cvc.component.ts","../../../projects/ngx-stripe/src/lib/components/issuing-card-expiry.component.ts","../../../projects/ngx-stripe/src/lib/components/issuing-card-number.component.ts","../../../projects/ngx-stripe/src/lib/components/issuing-card-pin.component.ts","../../../projects/ngx-stripe/src/lib/components/link-authentication.component.ts","../../../projects/ngx-stripe/src/lib/components/p24-bank.component.ts","../../../projects/ngx-stripe/src/lib/components/au-bank-account.component.ts","../../../projects/ngx-stripe/src/lib/components/payment-element.component.ts","../../../projects/ngx-stripe/src/lib/components/payment-method-messaging.component.ts","../../../projects/ngx-stripe/src/lib/components/payment-request-button.component.ts","../../../projects/ngx-stripe/src/lib/services/stripe-factory.service.ts","../../../projects/ngx-stripe/src/lib/ngx-stripe.module.ts","../../../projects/ngx-stripe/src/lib/utils/inject-stripe.ts","../../../projects/ngx-stripe/src/public_api.ts","../../../projects/ngx-stripe/src/ngx-stripe.ts"],"sourcesContent":["import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngxStripeLoadingTemplate]',\n  standalone: true\n})\nexport class NgxStripeElementLoadingTemplateDirective {\n  constructor(public templateRef: TemplateRef<NgxStripeElementLoadingTemplateDirective>) {}\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nexport const STRIPE_PUBLISHABLE_KEY = new InjectionToken<string>('Stripe Publishable Key');\nexport const STRIPE_OPTIONS = new InjectionToken<StripeConstructorOptions>('Stripe Options');\n\nexport const NGX_STRIPE_VERSION = new InjectionToken<string>('NGX_STRIPE_VERSION');\n","import { BehaviorSubject, from, Observable } from 'rxjs';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\n\nimport {\n  ConfirmAcssDebitPaymentData,\n  ConfirmAcssDebitPaymentOptions,\n  ConfirmAfterpayClearpayPaymentData,\n  ConfirmAfterpayClearpayPaymentOptions,\n  ConfirmAlipayPaymentData,\n  ConfirmAlipayPaymentOptions,\n  ConfirmAuBecsDebitPaymentData,\n  ConfirmAuBecsDebitSetupData,\n  ConfirmBancontactPaymentData,\n  ConfirmBancontactPaymentOptions,\n  ConfirmBoletoPaymentData,\n  ConfirmBoletoPaymentOptions,\n  ConfirmCardPaymentData,\n  ConfirmCardPaymentOptions,\n  ConfirmEpsPaymentData,\n  ConfirmEpsPaymentOptions,\n  ConfirmFpxPaymentData,\n  ConfirmFpxPaymentOptions,\n  ConfirmGiropayPaymentData,\n  ConfirmGiropayPaymentOptions,\n  ConfirmGrabPayPaymentData,\n  ConfirmGrabPayPaymentOptions,\n  ConfirmIdealPaymentData,\n  ConfirmIdealPaymentOptions,\n  ConfirmKlarnaPaymentData,\n  ConfirmKlarnaPaymentOptions,\n  ConfirmOxxoPaymentData,\n  ConfirmOxxoPaymentOptions,\n  ConfirmP24PaymentData,\n  ConfirmP24PaymentOptions,\n  ConfirmCardSetupData,\n  ConfirmCardSetupOptions,\n  ConfirmSepaDebitPaymentData,\n  ConfirmSofortPaymentData,\n  ConfirmWechatPayPaymentData,\n  ConfirmWechatPayPaymentOptions,\n  ConfirmSepaDebitSetupData,\n  CreatePaymentMethodData,\n  VerifyMicrodepositsForPaymentData,\n  ConfirmAcssDebitSetupData,\n  ConfirmAcssDebitSetupOptions,\n  CreateSourceData,\n  CreateTokenIbanData,\n  CreateTokenCardData,\n  CreateTokenPiiData,\n  CreateTokenBankAccountData,\n  PaymentRequest,\n  PaymentRequestOptions,\n  RedirectToCheckoutOptions,\n  RetrieveSourceParam,\n  Stripe,\n  StripeCardElement,\n  StripeCardNumberElement,\n  StripeCardCvcElement,\n  StripeConstructorOptions,\n  StripeElements,\n  StripeElement,\n  StripeError,\n  StripeIbanElement,\n  TokenCreateParams,\n  ConfirmBacsDebitSetupData,\n  ConfirmBancontactSetupData,\n  ConfirmIdealSetupData,\n  ConfirmSofortSetupData,\n  VerifyMicrodepositsForSetupData,\n  WrapperLibrary,\n  VerificationSessionResult,\n  ConfirmPayPalPaymentData,\n  ConfirmPayPalSetupData,\n  ConfirmPaymentData,\n  ConfirmCustomerBalancePaymentData,\n  ConfirmCustomerBalancePaymentOptions,\n  ConfirmPayNowPaymentData,\n  ConfirmPayNowPaymentOptions,\n  ConfirmPromptPayPaymentData,\n  ConfirmPromptPayPaymentOptions,\n  ConfirmAffirmPaymentData,\n  ConfirmAffirmPaymentOptions,\n  ConfirmSofortPaymentOptions,\n  ConfirmSofortSetupOptions,\n  ConfirmKonbiniPaymentData,\n  ConfirmKonbiniPaymentOptions,\n  ConfirmUsBankAccountPaymentData,\n  CollectBankAccountForPaymentOptions,\n  ConfirmUsBankAccountSetupData,\n  CollectBankAccountForSetupOptions,\n  PaymentIntentResult,\n  PaymentMethodResult,\n  SetupIntentResult,\n  TokenResult,\n  SourceResult,\n  ConfirmPixPaymentData,\n  ConfirmPixPaymentOptions,\n  RadarSessionPayload,\n  ProcessOrderResult,\n  RetrieveOrderResult,\n  FinancialConnectionsSessionResult,\n  CollectBankAccountTokenResult,\n  EphemeralKeyNonceResult,\n  ProcessOrderParams,\n  CollectFinancialConnectionsAccountsOptions,\n  CollectBankAccountTokenOptions,\n  EphemeralKeyNonceOptions,\n  StripeElementsOptionsClientSecret,\n  StripeElementsOptionsMode,\n  StripeElementsOptions,\n  ConfirmBlikPaymentData,\n  ConfirmBlikPaymentOptions,\n  ConfirmCashappPaymentData,\n  ConfirmCashappPaymentOptions,\n  PaymentIntentOrSetupIntentResult,\n  CreatePaymentMethodFromElements,\n  CreatePaymentMethodFromElement,\n  ConfirmCashappSetupData,\n  ConfirmCashappSetupOptions,\n  StripeCustomCheckoutOptions,\n  StripeCustomCheckout,\n  StripeEmbeddedCheckoutOptions,\n  StripeEmbeddedCheckout\n} from '@stripe/stripe-js';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { WindowRef } from './window-ref.service';\nimport { LazyStripeAPILoader, LazyStripeAPILoaderStatus } from './api-loader.service';\n\nexport class StripeInstance implements StripeServiceInterface {\n  private stripe$ = new BehaviorSubject<Stripe | undefined>(undefined);\n  stripe = this.stripe$.asObservable().pipe(filter((stripe) => Boolean(stripe))) as Observable<Stripe>;\n\n  constructor(\n    private version: string,\n    private loader: LazyStripeAPILoader,\n    private window: WindowRef,\n    private key: string,\n    private options?: StripeConstructorOptions\n  ) {\n    this.loader\n      .asStream()\n      .pipe(\n        filter((status: LazyStripeAPILoaderStatus) => status.loaded === true),\n        first(),\n        map(() => (this.window.getNativeWindow() as any).Stripe)\n      )\n      .subscribe((stripeInstance: any) => {\n        const stripe = this.options\n          ? (stripeInstance(this.key, this.options) as Stripe)\n          : (stripeInstance(this.key) as Stripe);\n\n        stripe.registerAppInfo(this.getNgxStripeAppInfo(this.version));\n        this.stripe$.next(stripe);\n      });\n  }\n\n  getInstance(): Stripe {\n    return this.stripe$.getValue() as Stripe;\n  }\n\n  elements(options?: StripeElementsOptionsClientSecret): Observable<StripeElements>;\n  elements(options?: StripeElementsOptionsMode): Observable<StripeElements>;\n  elements(options?: StripeElementsOptions): Observable<StripeElements>;\n  elements(options?): Observable<StripeElements> {\n    return this.stripe.pipe(\n      map((stripe: Stripe) => stripe.elements(options)),\n      first()\n    );\n  }\n\n  redirectToCheckout(options: RedirectToCheckoutOptions): Observable<never | { error: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.redirectToCheckout(options))),\n      first()\n    );\n  }\n\n  confirmPayment(options: {\n    elements: StripeElements;\n    confirmParams?: Partial<ConfirmPaymentData>;\n    redirect: 'if_required';\n  }): Observable<PaymentIntentResult>;\n  confirmPayment(options: {\n    elements?: StripeElements;\n    clientSecret: string;\n    confirmParams?: Partial<ConfirmPaymentData>;\n    redirect: 'if_required';\n  }): Observable<PaymentIntentResult>;\n  confirmPayment(options: {\n    elements: StripeElements;\n    confirmParams: ConfirmPaymentData;\n    redirect?: 'always';\n  }): Observable<never | { error: StripeError }>;\n  confirmPayment(options: {\n    elements?: StripeElements;\n    clientSecret: string;\n    confirmParams: ConfirmPaymentData;\n    redirect?: 'always';\n  }): Observable<never | {error: StripeError}>;\n  confirmPayment(options) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmPayment(options))),\n      first()\n    );\n  }\n\n  confirmAcssDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAcssDebitPaymentData,\n    options?: ConfirmAcssDebitPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmAcssDebitPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmUsBankAccountPayment(\n    clientSecret: string,\n    data?: ConfirmUsBankAccountPaymentData\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmUsBankAccountPayment(clientSecret, data))),\n      first()\n    );\n  }\n\n  confirmAlipayPayment(\n    clientSecret: string,\n    data?: ConfirmAlipayPaymentData,\n    options?: ConfirmAlipayPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmAlipayPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmAuBecsDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitPaymentData\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmAuBecsDebitPayment(clientSecret, data))),\n      first()\n    );\n  }\n\n  confirmBancontactPayment(\n    clientSecret: string,\n    data?: ConfirmBancontactPaymentData,\n    options?: ConfirmBancontactPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmBancontactPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmBlikPayment(\n    clientSecret: string,\n    data?: ConfirmBlikPaymentData,\n    options?: ConfirmBlikPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmBlikPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmBoletoPayment(\n    clientSecret: string,\n    data?: ConfirmBoletoPaymentData,\n    options?: ConfirmBoletoPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmBoletoPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmCardPayment(\n    clientSecret: string,\n    data?: ConfirmCardPaymentData,\n    options?: ConfirmCardPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmCardPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmCashappPayment(\n    clientSecret: string,\n    data?: ConfirmCashappPaymentData,\n    options?: ConfirmCashappPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmCashappPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmCustomerBalancePayment(\n    clientSecret: string,\n    data: ConfirmCustomerBalancePaymentData,\n    options: ConfirmCustomerBalancePaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmCustomerBalancePayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmEpsPayment(\n    clientSecret: string,\n    data?: ConfirmEpsPaymentData,\n    options?: ConfirmEpsPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmEpsPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmFpxPayment(\n    clientSecret: string,\n    data?: ConfirmFpxPaymentData,\n    options?: ConfirmFpxPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmFpxPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmGiropayPayment(\n    clientSecret: string,\n    data?: ConfirmGiropayPaymentData,\n    options?: ConfirmGiropayPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmGiropayPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmGrabPayPayment(\n    clientSecret: string,\n    data?: ConfirmGrabPayPaymentData,\n    options?: ConfirmGrabPayPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmGrabPayPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmIdealPayment(\n    clientSecret: string,\n    data?: ConfirmIdealPaymentData,\n    options?: ConfirmIdealPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmIdealPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmKlarnaPayment(\n    clientSecret: string,\n    data?: ConfirmKlarnaPaymentData,\n    options?: ConfirmKlarnaPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmKlarnaPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmKonbiniPayment(\n    clientSecret: string,\n    data?: ConfirmKonbiniPaymentData,\n    options?: ConfirmKonbiniPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmKonbiniPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmOxxoPayment(\n    clientSecret: string,\n    data?: ConfirmOxxoPaymentData,\n    options?: ConfirmOxxoPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmOxxoPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmP24Payment(\n    clientSecret: string,\n    data?: ConfirmP24PaymentData,\n    options?: ConfirmP24PaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmP24Payment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmPayNowPayment(\n    clientSecret: string,\n    data?: ConfirmPayNowPaymentData,\n    options?: ConfirmPayNowPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmPayNowPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmPayPalPayment(clientSecret: string, data?: ConfirmPayPalPaymentData): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmPayPalPayment(clientSecret, data))),\n      first()\n    );\n  }\n\n  confirmPixPayment(\n    clientSecret: string,\n    data?: ConfirmPixPaymentData,\n    options?: ConfirmPixPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmPixPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmPromptPayPayment(\n    clientSecret: string,\n    data?: ConfirmPromptPayPaymentData,\n    options?: ConfirmPromptPayPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmPromptPayPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmSepaDebitPayment(clientSecret: string, data?: ConfirmSepaDebitPaymentData): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmSepaDebitPayment(clientSecret, data))),\n      first()\n    );\n  }\n\n  confirmSofortPayment(\n    clientSecret: string,\n    data?: ConfirmSofortPaymentData,\n    options?: ConfirmSofortPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmSofortPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmWechatPayPayment(\n    clientSecret: string,\n    data?: ConfirmWechatPayPaymentData,\n    options?: ConfirmWechatPayPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmWechatPayPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  handleCardAction(clientSecret: string): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.handleCardAction(clientSecret))),\n      first()\n    );\n  }\n\n  handleNextAction(options: { clientSecret: string; }): Observable<PaymentIntentOrSetupIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.handleNextAction(options))),\n      first()\n    );\n  }\n\n  verifyMicrodepositsForPayment(\n    clientSecret: string,\n    data?: VerifyMicrodepositsForPaymentData\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.verifyMicrodepositsForPayment(clientSecret, data))),\n      first()\n    );\n  }\n\n  createRadarSession(): Observable<RadarSessionPayload> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.createRadarSession())),\n      first()\n    );\n  }\n\n  collectBankAccountForPayment(options: CollectBankAccountForPaymentOptions): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.collectBankAccountForPayment(options))),\n      first()\n    );\n  }\n\n  createPaymentMethod(paymentMethodData: CreatePaymentMethodData): Observable<PaymentMethodResult>;\n  createPaymentMethod(options: CreatePaymentMethodFromElements): Observable<PaymentMethodResult>;\n  createPaymentMethod(options: CreatePaymentMethodFromElement): Observable<PaymentMethodResult>;\n  createPaymentMethod(options) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.createPaymentMethod(options))),\n      first()\n    );\n  }\n\n  retrievePaymentIntent(clientSecret: string): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrievePaymentIntent(clientSecret))),\n      first()\n    );\n  }\n\n  confirmSetup(options: {\n    elements: StripeElements;\n    confirmParams?: Partial<ConfirmPaymentData>;\n    redirect: 'if_required';\n  }): Observable<SetupIntentResult>;\n  confirmSetup(options: {\n    elements?: StripeElements;\n    clientSecret: string;\n    confirmParams?: Partial<ConfirmPaymentData>;\n    redirect: 'if_required';\n  }): Observable<SetupIntentResult>;\n  confirmSetup(options: {\n    elements: StripeElements;\n    confirmParams: ConfirmPaymentData;\n    redirect?: 'always';\n  }): Observable<never | { error: StripeError }>;\n  confirmSetup(options: {\n    elements?: StripeElements;\n    clientSecret: string;\n    confirmParams: ConfirmPaymentData;\n    redirect?: 'always';\n  }): Observable<never | {error: StripeError}>;\n  confirmSetup(options) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmSetup(options))),\n      first()\n    );\n  }\n\n  confirmAcssDebitSetup(\n    clientSecret: string,\n    data?: ConfirmAcssDebitSetupData,\n    options?: ConfirmAcssDebitSetupOptions\n  ): Observable<SetupIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmAcssDebitSetup(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmUsBankAccountSetup(clientSecret: string, data?: ConfirmUsBankAccountSetupData): Observable<SetupIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmUsBankAccountSetup(clientSecret, data))),\n      first()\n    );\n  }\n\n  confirmAuBecsDebitSetup(clientSecret: string, data?: ConfirmAuBecsDebitSetupData): Observable<SetupIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmAuBecsDebitSetup(clientSecret, data))),\n      first()\n    );\n  }\n\n  confirmBacsDebitSetup(clientSecret: string, data?: ConfirmBacsDebitSetupData): Observable<SetupIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmBacsDebitSetup(clientSecret, data))),\n      first()\n    );\n  }\n\n  confirmBancontactSetup(clientSecret: string, data?: ConfirmBancontactSetupData): Observable<SetupIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmBancontactSetup(clientSecret, data))),\n      first()\n    );\n  }\n\n  confirmCardSetup(\n    clientSecret: string,\n    data?: ConfirmCardSetupData,\n    options?: ConfirmCardSetupOptions\n  ): Observable<SetupIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmCardSetup(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmCashappSetup(\n    clientSecret: string,\n    data?: ConfirmCashappSetupData,\n    options?: ConfirmCashappSetupOptions\n  ): Observable<SetupIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmCashappSetup(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmIdealSetup(clientSecret: string, data?: ConfirmIdealSetupData): Observable<SetupIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmIdealSetup(clientSecret, data))),\n      first()\n    );\n  }\n\n  confirmPayPalSetup(clientSecret: string, data?: ConfirmPayPalSetupData): Observable<SetupIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmPayPalSetup(clientSecret, data))),\n      first()\n    );\n  }\n\n  confirmSepaDebitSetup(clientSecret: string, data?: ConfirmSepaDebitSetupData): Observable<SetupIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmSepaDebitSetup(clientSecret, data))),\n      first()\n    );\n  }\n\n  confirmSofortSetup(\n    clientSecret: string,\n    data?: ConfirmSofortSetupData,\n    options?: ConfirmSofortSetupOptions\n  ): Observable<SetupIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmSofortSetup(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmAffirmPayment(\n    clientSecret: string,\n    data?: ConfirmAffirmPaymentData,\n    options?: ConfirmAffirmPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmAffirmPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  confirmAfterpayClearpayPayment(\n    clientSecret: string,\n    data?: ConfirmAfterpayClearpayPaymentData,\n    options?: ConfirmAfterpayClearpayPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmAfterpayClearpayPayment(clientSecret, data, options))),\n      first()\n    );\n  }\n\n  verifyMicrodepositsForSetup(\n    clientSecret: string,\n    data?: VerifyMicrodepositsForSetupData\n  ): Observable<SetupIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.verifyMicrodepositsForSetup(clientSecret, data))),\n      first()\n    );\n  }\n\n  collectBankAccountForSetup(options: CollectBankAccountForSetupOptions): Observable<SetupIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.collectBankAccountForSetup(options))),\n      first()\n    );\n  }\n\n  retrieveSetupIntent(clientSecret: string): Observable<SetupIntentResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrieveSetupIntent(clientSecret))),\n      first()\n    );\n  }\n\n  processOrder(options: {\n    elements: StripeElements;\n    confirmParams?: Partial<ProcessOrderParams>;\n    redirect: 'if_required';\n  }): Observable<ProcessOrderResult>;\n  processOrder(options: {\n    elements: StripeElements;\n    confirmParams: ProcessOrderParams;\n    redirect?: 'always';\n  }): Observable<never | { error: StripeError }>;\n  processOrder(options) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.processOrder(options))),\n      first()\n    );\n  }\n\n  retrieveOrder(clientSecret: string): Observable<RetrieveOrderResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrieveOrder(clientSecret))),\n      first()\n    );\n  }\n\n  paymentRequest(options: PaymentRequestOptions): PaymentRequest {\n    const stripe = this.getInstance();\n    return stripe.paymentRequest(options);\n  }\n\n  createToken(tokenType: StripeIbanElement, data: CreateTokenIbanData): Observable<TokenResult>;\n  createToken(\n    tokenType: StripeCardElement | StripeCardNumberElement,\n    data?: CreateTokenCardData\n  ): Observable<TokenResult>;\n  createToken(tokenType: 'pii', data: CreateTokenPiiData): Observable<TokenResult>;\n  createToken(tokenType: 'bank_account', data: CreateTokenBankAccountData): Observable<TokenResult>;\n  createToken(tokenType: 'cvc_update', element?: StripeCardCvcElement): Observable<TokenResult>;\n  createToken(tokenType: 'account', data: TokenCreateParams.Account): Observable<TokenResult>;\n  createToken(tokenType: 'person', data: TokenCreateParams.Person): Observable<TokenResult>;\n  createToken(tokenType, data) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.createToken(tokenType, data))),\n      first()\n    );\n  }\n\n  createSource(element: StripeElement, sourceData: CreateSourceData): Observable<SourceResult>;\n  createSource(sourceData: CreateSourceData): Observable<SourceResult>;\n  createSource(a, b?): Observable<SourceResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.createSource(a, b))),\n      first()\n    );\n  }\n\n  retrieveSource(source: RetrieveSourceParam): Observable<SourceResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrieveSource(source))),\n      first()\n    );\n  }\n\n  verifyIdentity(clientSecret: string): Observable<VerificationSessionResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.verifyIdentity(clientSecret))),\n      first()\n    );\n  }\n\n  collectFinancialConnectionsAccounts(\n    options: CollectFinancialConnectionsAccountsOptions\n  ): Observable<FinancialConnectionsSessionResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.collectFinancialConnectionsAccounts(options))),\n      first()\n    );\n  }\n\n  collectBankAccountToken(options: CollectBankAccountTokenOptions): Observable<CollectBankAccountTokenResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.collectBankAccountToken(options))),\n      first()\n    );\n  }\n\n  createEphemeralKeyNonce(options: EphemeralKeyNonceOptions): Observable<EphemeralKeyNonceResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.createEphemeralKeyNonce(options))),\n      first()\n    );\n  }\n\n  initCustomCheckout(options: StripeCustomCheckoutOptions): Observable<StripeCustomCheckout> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.initCustomCheckout(options))),\n      first()\n    );\n  }\n\n  initEmbeddedCheckout(options: StripeEmbeddedCheckoutOptions): Observable<StripeEmbeddedCheckout> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.initEmbeddedCheckout(options))),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardPayment(clientSecret: string, element?, data?) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from((stripe as any).handleCardPayment(clientSecret, element, data))),\n      first()\n    ) as Observable<PaymentIntentResult>;\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmPaymentIntent(clientSecret: string, element?, data?) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from((stripe as any).confirmPaymentIntent(clientSecret, element, data))),\n      first()\n    ) as Observable<PaymentIntentResult>;\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardSetup(clientSecret: string, element?, data?) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from((stripe as any).handleCardSetup(clientSecret, element, data))),\n      first()\n    ) as Observable<SetupIntentResult>;\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmSetupIntent(clientSecret: string, element?, data?) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from((stripe as any).confirmSetupIntent(clientSecret, element, data))),\n      first()\n    ) as Observable<SetupIntentResult>;\n  }\n\n  /**\n   * @deprecated\n   */\n  handleFpxPayment(clientSecret: string, element?, data?) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from((stripe as any).handleFpxPayment(clientSecret, element, data))),\n      first()\n    ) as Observable<SetupIntentResult>;\n  }\n\n  private getNgxStripeAppInfo(version: string): WrapperLibrary {\n    return {\n      name: 'ngx-stripe',\n      url: 'https://ngx-stripe.dev',\n      partner_id: 'pp_partner_JR4l1rmvUoPP4V',\n      version\n    };\n  }\n}\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class WindowRef {\n  constructor(@Inject(PLATFORM_ID) public platformId: any) {}\n\n  public getNativeWindow(): Window {\n    if (isPlatformBrowser(this.platformId)) {\n      return window;\n    }\n    return {} as Window;\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class DocumentRef {\n  constructor(@Inject(PLATFORM_ID) public platformId: any) {}\n\n  public getNativeDocument(): Document {\n    if (isPlatformBrowser(this.platformId)) {\n      return document;\n    }\n    return {} as Document;\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport { WindowRef } from './window-ref.service';\nimport { DocumentRef } from './document-ref.service';\n\nexport interface LazyStripeAPILoaderStatus {\n  loaded: boolean;\n  loading: boolean;\n  error: boolean;\n}\n\n@Injectable()\nexport class LazyStripeAPILoader {\n  public status = new BehaviorSubject<LazyStripeAPILoaderStatus>({\n    error: false,\n    loaded: false,\n    loading: false\n  });\n\n  constructor(@Inject(PLATFORM_ID) public platformId: any, public window: WindowRef, public document: DocumentRef) {}\n\n  public asStream(): Observable<LazyStripeAPILoaderStatus> {\n    this.load();\n    return this.status.asObservable();\n  }\n\n  public isReady(): boolean {\n    return this.status.getValue().loaded;\n  }\n\n  public load() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    const status: LazyStripeAPILoaderStatus = this.status.getValue();\n    if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n      this.status.next({\n        error: false,\n        loaded: true,\n        loading: false\n      });\n    } else if (!status.loaded && !status.loading) {\n      this.status.next({\n        ...status,\n        loading: true\n      });\n\n      const script = this.document.getNativeDocument().createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.src = 'https://js.stripe.com/v3/';\n\n      script.onload = () => {\n        this.status.next({\n          error: false,\n          loaded: true,\n          loading: false\n        });\n      };\n\n      script.onerror = () => {\n        this.status.next({\n          error: true,\n          loaded: false,\n          loading: false\n        });\n      };\n\n      this.document.getNativeDocument().body.appendChild(script);\n    }\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport {\n  ConfirmAcssDebitPaymentData,\n  ConfirmAcssDebitPaymentOptions,\n  ConfirmAfterpayClearpayPaymentData,\n  ConfirmAfterpayClearpayPaymentOptions,\n  ConfirmAlipayPaymentData,\n  ConfirmAlipayPaymentOptions,\n  ConfirmAuBecsDebitPaymentData,\n  ConfirmAuBecsDebitSetupData,\n  ConfirmBancontactPaymentData,\n  ConfirmBancontactPaymentOptions,\n  ConfirmBoletoPaymentData,\n  ConfirmBoletoPaymentOptions,\n  ConfirmCardPaymentData,\n  ConfirmCardPaymentOptions,\n  ConfirmEpsPaymentData,\n  ConfirmEpsPaymentOptions,\n  ConfirmFpxPaymentData,\n  ConfirmFpxPaymentOptions,\n  ConfirmGiropayPaymentData,\n  ConfirmGiropayPaymentOptions,\n  ConfirmGrabPayPaymentData,\n  ConfirmGrabPayPaymentOptions,\n  ConfirmIdealPaymentData,\n  ConfirmIdealPaymentOptions,\n  ConfirmKlarnaPaymentData,\n  ConfirmKlarnaPaymentOptions,\n  ConfirmOxxoPaymentData,\n  ConfirmOxxoPaymentOptions,\n  ConfirmP24PaymentData,\n  ConfirmP24PaymentOptions,\n  ConfirmCardSetupData,\n  ConfirmCardSetupOptions,\n  ConfirmSepaDebitPaymentData,\n  ConfirmSofortPaymentData,\n  ConfirmWechatPayPaymentData,\n  ConfirmWechatPayPaymentOptions,\n  ConfirmSepaDebitSetupData,\n  CreatePaymentMethodData,\n  VerifyMicrodepositsForPaymentData,\n  ConfirmAcssDebitSetupData,\n  ConfirmAcssDebitSetupOptions,\n  CreateSourceData,\n  CreateTokenIbanData,\n  CreateTokenCardData,\n  CreateTokenPiiData,\n  CreateTokenBankAccountData,\n  PaymentRequest,\n  PaymentRequestOptions,\n  RedirectToCheckoutOptions,\n  RetrieveSourceParam,\n  Stripe,\n  StripeCardElement,\n  StripeCardNumberElement,\n  StripeCardCvcElement,\n  StripeConstructorOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeElement,\n  StripeError,\n  StripeIbanElement,\n  TokenCreateParams,\n  ConfirmBacsDebitSetupData,\n  ConfirmBancontactSetupData,\n  ConfirmIdealSetupData,\n  ConfirmSofortSetupData,\n  VerifyMicrodepositsForSetupData,\n  VerificationSessionResult,\n  ConfirmPayPalPaymentData,\n  ConfirmPayPalSetupData,\n  ConfirmPaymentData,\n  ConfirmCustomerBalancePaymentData,\n  ConfirmCustomerBalancePaymentOptions,\n  ConfirmPayNowPaymentData,\n  ConfirmPayNowPaymentOptions,\n  ConfirmPromptPayPaymentData,\n  ConfirmPromptPayPaymentOptions,\n  ConfirmAffirmPaymentData,\n  ConfirmAffirmPaymentOptions,\n  ConfirmSofortPaymentOptions,\n  ConfirmSofortSetupOptions,\n  ConfirmKonbiniPaymentData,\n  ConfirmKonbiniPaymentOptions,\n  ConfirmUsBankAccountPaymentData,\n  CollectBankAccountForPaymentOptions,\n  ConfirmUsBankAccountSetupData,\n  CollectBankAccountForSetupOptions,\n  ConfirmPixPaymentData,\n  ConfirmPixPaymentOptions,\n  PaymentIntentResult,\n  PaymentMethodResult,\n  SetupIntentResult,\n  ProcessOrderResult,\n  RetrieveOrderResult,\n  TokenResult,\n  SourceResult,\n  FinancialConnectionsSessionResult,\n  CollectBankAccountTokenResult,\n  EphemeralKeyNonceResult,\n  RadarSessionPayload,\n  ProcessOrderParams,\n  CollectFinancialConnectionsAccountsOptions,\n  CollectBankAccountTokenOptions,\n  EphemeralKeyNonceOptions,\n  StripeElementsOptionsClientSecret,\n  StripeElementsOptionsMode,\n  ConfirmBlikPaymentData,\n  ConfirmBlikPaymentOptions,\n  ConfirmCashappPaymentData,\n  ConfirmCashappPaymentOptions,\n  PaymentIntentOrSetupIntentResult,\n  CreatePaymentMethodFromElements,\n  CreatePaymentMethodFromElement,\n  ConfirmCashappSetupData,\n  ConfirmCashappSetupOptions,\n  StripeCustomCheckoutOptions,\n  StripeCustomCheckout,\n  StripeEmbeddedCheckoutOptions,\n  StripeEmbeddedCheckout\n} from '@stripe/stripe-js';\n\nimport { STRIPE_PUBLISHABLE_KEY, STRIPE_OPTIONS, NGX_STRIPE_VERSION } from '../interfaces/ngx-stripe.interface';\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { WindowRef } from './window-ref.service';\nimport { LazyStripeAPILoader, LazyStripeAPILoaderStatus } from './api-loader.service';\n\nimport { StripeInstance } from './stripe-instance.class';\n\n@Injectable()\nexport class StripeService implements StripeServiceInterface {\n  stripe!: StripeInstance;\n\n  constructor(\n    @Inject(NGX_STRIPE_VERSION) public version: string,\n    @Inject(STRIPE_PUBLISHABLE_KEY) public key: string,\n    @Inject(STRIPE_OPTIONS) public options: StripeConstructorOptions,\n    public loader: LazyStripeAPILoader,\n    public window: WindowRef\n  ) {\n    if (key) {\n      this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n    }\n  }\n\n  getStripeReference(): Observable<any> {\n    return this.loader.asStream().pipe(\n      filter((status: LazyStripeAPILoaderStatus) => status.loaded === true),\n      map(() => (this.window.getNativeWindow() as any).Stripe)\n    );\n  }\n\n  getInstance(): Stripe | undefined {\n    return this.stripe.getInstance();\n  }\n\n  setKey(key: string, options?: StripeConstructorOptions) {\n    return this.changeKey(key, options);\n  }\n\n  changeKey(key: string, options?: StripeConstructorOptions) {\n    this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n\n    return this.stripe;\n  }\n\n  elements(options?: StripeElementsOptionsClientSecret): Observable<StripeElements>;\n  elements(options?: StripeElementsOptionsMode): Observable<StripeElements>;\n  elements(options?: StripeElementsOptions): Observable<StripeElements>;\n  elements(options?): Observable<StripeElements> {\n    return this.stripe.elements(options);\n  }\n\n  redirectToCheckout(options: RedirectToCheckoutOptions): Observable<never | { error: StripeError }> {\n    return this.stripe.redirectToCheckout(options);\n  }\n\n  confirmPayment(options: {\n    elements: StripeElements;\n    confirmParams?: Partial<ConfirmPaymentData>;\n    redirect: 'if_required';\n  }): Observable<PaymentIntentResult>;\n  confirmPayment(options: {\n    elements?: StripeElements;\n    clientSecret: string;\n    confirmParams?: Partial<ConfirmPaymentData>;\n    redirect: 'if_required';\n  }): Observable<PaymentIntentResult>;\n  confirmPayment(options: {\n    elements: StripeElements;\n    confirmParams: ConfirmPaymentData;\n    redirect?: 'always';\n  }): Observable<never | { error: StripeError }>;\n  confirmPayment(options: {\n    elements?: StripeElements;\n    clientSecret: string;\n    confirmParams: ConfirmPaymentData;\n    redirect?: 'always';\n  }): Observable<never | {error: StripeError}>;\n  confirmPayment(options) {\n    return this.stripe.confirmPayment(options);\n  }\n\n  confirmAcssDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAcssDebitPaymentData,\n    options?: ConfirmAcssDebitPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmAcssDebitPayment(clientSecret, data, options);\n  }\n\n  confirmUsBankAccountPayment(\n    clientSecret: string,\n    data?: ConfirmUsBankAccountPaymentData\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmUsBankAccountPayment(clientSecret, data);\n  }\n\n  confirmAlipayPayment(\n    clientSecret: string,\n    data?: ConfirmAlipayPaymentData,\n    options?: ConfirmAlipayPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmAlipayPayment(clientSecret, data, options);\n  }\n\n  confirmAuBecsDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitPaymentData\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n  }\n\n  confirmBancontactPayment(\n    clientSecret: string,\n    data?: ConfirmBancontactPaymentData,\n    options?: ConfirmBancontactPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n  }\n\n  confirmBlikPayment(\n    clientSecret: string,\n    data?: ConfirmBlikPaymentData,\n    options?: ConfirmBlikPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmBlikPayment(clientSecret, data, options);\n  }\n\n  confirmBoletoPayment(\n    clientSecret: string,\n    data?: ConfirmBoletoPaymentData,\n    options?: ConfirmBoletoPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmBoletoPayment(clientSecret, data, options);\n  }\n\n  confirmCardPayment(\n    clientSecret: string,\n    data?: ConfirmCardPaymentData,\n    options?: ConfirmCardPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmCardPayment(clientSecret, data, options);\n  }\n\n  confirmCashappPayment(\n    clientSecret: string,\n    data?: ConfirmCashappPaymentData,\n    options?: ConfirmCashappPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmCashappPayment(clientSecret, data, options);\n  }\n\n  confirmCustomerBalancePayment(\n    clientSecret: string,\n    data: ConfirmCustomerBalancePaymentData,\n    options: ConfirmCustomerBalancePaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmCustomerBalancePayment(clientSecret, data, options);\n  }\n\n  confirmEpsPayment(\n    clientSecret: string,\n    data?: ConfirmEpsPaymentData,\n    options?: ConfirmEpsPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmEpsPayment(clientSecret, data, options);\n  }\n\n  confirmFpxPayment(\n    clientSecret: string,\n    data?: ConfirmFpxPaymentData,\n    options?: ConfirmFpxPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmFpxPayment(clientSecret, data, options);\n  }\n\n  confirmGiropayPayment(\n    clientSecret: string,\n    data?: ConfirmGiropayPaymentData,\n    options?: ConfirmGiropayPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n  }\n\n  confirmGrabPayPayment(\n    clientSecret: string,\n    data?: ConfirmGrabPayPaymentData,\n    options?: ConfirmGrabPayPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmGrabPayPayment(clientSecret, data, options);\n  }\n\n  confirmIdealPayment(\n    clientSecret: string,\n    data?: ConfirmIdealPaymentData,\n    options?: ConfirmIdealPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmIdealPayment(clientSecret, data, options);\n  }\n\n  confirmKlarnaPayment(\n    clientSecret: string,\n    data?: ConfirmKlarnaPaymentData,\n    options?: ConfirmKlarnaPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmKlarnaPayment(clientSecret, data, options);\n  }\n\n  confirmKonbiniPayment(\n    clientSecret: string,\n    data?: ConfirmKonbiniPaymentData,\n    options?: ConfirmKonbiniPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmKonbiniPayment(clientSecret, data, options);\n  }\n\n  confirmOxxoPayment(\n    clientSecret: string,\n    data?: ConfirmOxxoPaymentData,\n    options?: ConfirmOxxoPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmOxxoPayment(clientSecret, data, options);\n  }\n\n  confirmP24Payment(\n    clientSecret: string,\n    data?: ConfirmP24PaymentData,\n    options?: ConfirmP24PaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmP24Payment(clientSecret, data, options);\n  }\n\n  confirmPayNowPayment(\n    clientSecret: string,\n    data?: ConfirmPayNowPaymentData,\n    options?: ConfirmPayNowPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmPayNowPayment(clientSecret, data, options);\n  }\n\n  confirmPayPalPayment(clientSecret: string, data?: ConfirmPayPalPaymentData): Observable<PaymentIntentResult> {\n    return this.stripe.confirmPayPalPayment(clientSecret, data);\n  }\n\n  confirmPixPayment(\n    clientSecret: string,\n    data?: ConfirmPixPaymentData,\n    options?: ConfirmPixPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmPixPayment(clientSecret, data, options);\n  }\n\n  confirmPromptPayPayment(\n    clientSecret: string,\n    data?: ConfirmPromptPayPaymentData,\n    options?: ConfirmPromptPayPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmPromptPayPayment(clientSecret, data, options);\n  }\n\n  confirmSepaDebitPayment(clientSecret: string, data?: ConfirmSepaDebitPaymentData): Observable<PaymentIntentResult> {\n    return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n  }\n\n  confirmSofortPayment(\n    clientSecret: string,\n    data?: ConfirmSofortPaymentData,\n    options?: ConfirmSofortPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmSofortPayment(clientSecret, data, options);\n  }\n\n  confirmWechatPayPayment(\n    clientSecret: string,\n    data?: ConfirmWechatPayPaymentData,\n    options?: ConfirmWechatPayPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmWechatPayPayment(clientSecret, data, options);\n  }\n\n  handleCardAction(clientSecret: string): Observable<PaymentIntentResult> {\n    return this.stripe.handleCardAction(clientSecret);\n  }\n\n  handleNextAction(options: { clientSecret: string; }): Observable<PaymentIntentOrSetupIntentResult> {\n    return this.stripe.handleNextAction(options);\n  }\n\n  verifyMicrodepositsForPayment(\n    clientSecret: string,\n    data?: VerifyMicrodepositsForPaymentData\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.verifyMicrodepositsForPayment(clientSecret, data);\n  }\n\n  createRadarSession(): Observable<RadarSessionPayload> {\n    return this.stripe.createRadarSession();\n  }\n\n  collectBankAccountForPayment(options: CollectBankAccountForPaymentOptions): Observable<PaymentIntentResult> {\n    return this.stripe.collectBankAccountForPayment(options);\n  }\n\n  createPaymentMethod(paymentMethodData: CreatePaymentMethodData): Observable<PaymentMethodResult>;\n  createPaymentMethod(options: CreatePaymentMethodFromElements): Observable<PaymentMethodResult>;\n  createPaymentMethod(options: CreatePaymentMethodFromElement): Observable<PaymentMethodResult>;\n  createPaymentMethod(options) {\n    return this.stripe.createPaymentMethod(options);\n  }\n\n  retrievePaymentIntent(clientSecret: string): Observable<PaymentIntentResult> {\n    return this.stripe.retrievePaymentIntent(clientSecret);\n  }\n\n  confirmSetup(options: {\n    elements: StripeElements;\n    confirmParams?: Partial<ConfirmPaymentData>;\n    redirect: 'if_required';\n  }): Observable<SetupIntentResult>;\n  confirmSetup(options: {\n    elements?: StripeElements;\n    clientSecret: string;\n    confirmParams?: Partial<ConfirmPaymentData>;\n    redirect: 'if_required';\n  }): Observable<SetupIntentResult>;\n  confirmSetup(options: {\n    elements: StripeElements;\n    confirmParams: ConfirmPaymentData;\n    redirect?: 'always';\n  }): Observable<never | { error: StripeError }>;\n  confirmSetup(options: {\n    elements?: StripeElements;\n    clientSecret: string;\n    confirmParams: ConfirmPaymentData;\n    redirect?: 'always';\n  }): Observable<never | {error: StripeError}>;\n  confirmSetup(options) {\n    return this.stripe.confirmSetup(options);\n  }\n\n  confirmAcssDebitSetup(\n    clientSecret: string,\n    data?: ConfirmAcssDebitSetupData,\n    options?: ConfirmAcssDebitSetupOptions\n  ): Observable<SetupIntentResult> {\n    return this.stripe.confirmAcssDebitSetup(clientSecret, data, options);\n  }\n\n  confirmUsBankAccountSetup(clientSecret: string, data?: ConfirmUsBankAccountSetupData): Observable<SetupIntentResult> {\n    return this.stripe.confirmUsBankAccountSetup(clientSecret, data);\n  }\n\n  confirmAuBecsDebitSetup(clientSecret: string, data?: ConfirmAuBecsDebitSetupData): Observable<SetupIntentResult> {\n    return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n  }\n\n  confirmBacsDebitSetup(clientSecret: string, data?: ConfirmBacsDebitSetupData): Observable<SetupIntentResult> {\n    return this.stripe.confirmBacsDebitSetup(clientSecret, data);\n  }\n\n  confirmBancontactSetup(clientSecret: string, data?: ConfirmBancontactSetupData): Observable<SetupIntentResult> {\n    return this.stripe.confirmBancontactSetup(clientSecret, data);\n  }\n\n  confirmCardSetup(\n    clientSecret: string,\n    data?: ConfirmCardSetupData,\n    options?: ConfirmCardSetupOptions\n  ): Observable<SetupIntentResult> {\n    return this.stripe.confirmCardSetup(clientSecret, data, options);\n  }\n\n  confirmCashappSetup(\n    clientSecret: string,\n    data?: ConfirmCashappSetupData,\n    options?: ConfirmCashappSetupOptions\n  ): Observable<SetupIntentResult> {\n    return this.stripe.confirmCashappSetup(clientSecret, data, options);\n  }\n\n  confirmIdealSetup(clientSecret: string, data?: ConfirmIdealSetupData): Observable<SetupIntentResult> {\n    return this.stripe.confirmIdealSetup(clientSecret, data);\n  }\n\n  confirmPayPalSetup(clientSecret: string, data?: ConfirmPayPalSetupData): Observable<SetupIntentResult> {\n    return this.stripe.confirmPayPalSetup(clientSecret, data);\n  }\n\n  confirmSepaDebitSetup(clientSecret: string, data?: ConfirmSepaDebitSetupData): Observable<SetupIntentResult> {\n    return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n  }\n\n  confirmSofortSetup(\n    clientSecret: string,\n    data?: ConfirmSofortSetupData,\n    options?: ConfirmSofortSetupOptions\n  ): Observable<SetupIntentResult> {\n    return this.stripe.confirmSofortSetup(clientSecret, data, options);\n  }\n\n  confirmAffirmPayment(\n    clientSecret: string,\n    data?: ConfirmAffirmPaymentData,\n    options?: ConfirmAffirmPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmAffirmPayment(clientSecret, data, options);\n  }\n\n  confirmAfterpayClearpayPayment(\n    clientSecret: string,\n    data?: ConfirmAfterpayClearpayPaymentData,\n    options?: ConfirmAfterpayClearpayPaymentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmAfterpayClearpayPayment(clientSecret, data, options);\n  }\n\n  verifyMicrodepositsForSetup(\n    clientSecret: string,\n    data?: VerifyMicrodepositsForSetupData\n  ): Observable<SetupIntentResult> {\n    return this.stripe.verifyMicrodepositsForSetup(clientSecret, data);\n  }\n\n  collectBankAccountForSetup(options: CollectBankAccountForSetupOptions): Observable<SetupIntentResult> {\n    return this.stripe.collectBankAccountForSetup(options);\n  }\n\n  retrieveSetupIntent(clientSecret: string): Observable<SetupIntentResult> {\n    return this.stripe.retrieveSetupIntent(clientSecret);\n  }\n\n  processOrder(options: {\n    elements: StripeElements;\n    confirmParams?: Partial<ProcessOrderParams>;\n    redirect: 'if_required';\n  }): Observable<ProcessOrderResult>;\n  processOrder(options: {\n    elements: StripeElements;\n    confirmParams: ProcessOrderParams;\n    redirect?: 'always';\n  }): Observable<never | { error: StripeError }>;\n  processOrder(options) {\n    return this.stripe.processOrder(options);\n  }\n\n  retrieveOrder(clientSecret: string): Observable<RetrieveOrderResult> {\n    return this.stripe.retrieveOrder(clientSecret);\n  }\n\n  paymentRequest(options: PaymentRequestOptions): PaymentRequest {\n    return this.stripe.paymentRequest(options);\n  }\n\n  createToken(tokenType: StripeIbanElement, data: CreateTokenIbanData): Observable<TokenResult>;\n  createToken(\n    tokenType: StripeCardElement | StripeCardNumberElement,\n    data?: CreateTokenCardData\n  ): Observable<TokenResult>;\n  createToken(tokenType: 'pii', data: CreateTokenPiiData): Observable<TokenResult>;\n  createToken(tokenType: 'bank_account', data: CreateTokenBankAccountData): Observable<TokenResult>;\n  createToken(tokenType: 'cvc_update', element?: StripeCardCvcElement): Observable<TokenResult>;\n  createToken(tokenType: 'account', data: TokenCreateParams.Account): Observable<TokenResult>;\n  createToken(tokenType: 'person', data: TokenCreateParams.Person): Observable<TokenResult>;\n  createToken(tokenType, data) {\n    return this.stripe.createToken(tokenType, data);\n  }\n\n  createSource(element: StripeElement, sourceData: CreateSourceData): Observable<SourceResult>;\n  createSource(sourceData: CreateSourceData): Observable<SourceResult>;\n  createSource(a, b?): Observable<SourceResult> {\n    return this.stripe.createSource(a, b);\n  }\n\n  retrieveSource(source: RetrieveSourceParam): Observable<SourceResult> {\n    return this.stripe.retrieveSource(source);\n  }\n\n  verifyIdentity(clientSecret: string): Observable<VerificationSessionResult> {\n    return this.stripe.verifyIdentity(clientSecret);\n  }\n\n  collectFinancialConnectionsAccounts(\n    options: CollectFinancialConnectionsAccountsOptions\n  ): Observable<FinancialConnectionsSessionResult> {\n    return this.stripe.collectFinancialConnectionsAccounts(options);\n  }\n\n  collectBankAccountToken(options: CollectBankAccountTokenOptions): Observable<CollectBankAccountTokenResult> {\n    return this.stripe.collectBankAccountToken(options);\n  }\n\n  createEphemeralKeyNonce(options: EphemeralKeyNonceOptions): Observable<EphemeralKeyNonceResult> {\n    return this.stripe.createEphemeralKeyNonce(options);\n  }\n\n  initCustomCheckout(options: StripeCustomCheckoutOptions): Observable<StripeCustomCheckout> {\n    return this.stripe.initCustomCheckout(options);\n  }\n\n  initEmbeddedCheckout(options: StripeEmbeddedCheckoutOptions): Observable<StripeEmbeddedCheckout> {\n    return this.stripe.initEmbeddedCheckout(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardPayment(clientSecret: string, element?, data?): Observable<PaymentIntentResult> {\n    return this.stripe.handleCardPayment(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmPaymentIntent(clientSecret: string, element?, data?): Observable<PaymentIntentResult> {\n    return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardSetup(clientSecret: string, element?, data?): Observable<SetupIntentResult> {\n    return this.stripe.handleCardSetup(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmSetupIntent(clientSecret: string, element?, data?): Observable<SetupIntentResult> {\n    return this.stripe.confirmSetupIntent(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleFpxPayment(clientSecret: string, element?, data?): Observable<SetupIntentResult> {\n    return this.stripe.handleFpxPayment(clientSecret, element, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport {\n  PaymentRequest,\n  PaymentRequestOptions,\n  StripeCardElementOptions,\n  StripeAuBankAccountElementOptions,\n  StripeCardNumberElementOptions,\n  StripeCardExpiryElementOptions,\n  StripeElements,\n  StripeFpxBankElementOptions,\n  StripeIbanElementOptions,\n  StripeIdealBankElementOptions,\n  StripePaymentRequestButtonElementOptions,\n  StripePaymentElementOptions,\n  StripeAffirmMessageElementOptions,\n  StripeAfterpayClearpayMessageElementOptions,\n  StripeEpsBankElementOptions,\n  StripeP24BankElementOptions,\n  StripeAddressElementOptions,\n  StripeLinkAuthenticationElementOptions,\n  StripeIssuingCardNumberDisplayElementOptions,\n  StripeIssuingCardCvcDisplayElementOptions,\n  StripeIssuingCardExpiryDisplayElementOptions,\n  StripeIssuingCardPinDisplayElementOptions,\n  StripeElementsOptionsClientSecret,\n  StripeElementsOptionsMode,\n  StripeElementsOptions,\n  StripePaymentMethodMessagingElementOptions,\n  StripeExpressCheckoutElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeService } from './stripe.service';\n\n@Injectable()\nexport class StripeElementsService {\n  constructor(private stripeService: StripeService) {}\n\n  elements(stripe, options?: StripeElementsOptionsClientSecret): Observable<StripeElements>;\n  elements(stripe, options?: StripeElementsOptionsMode): Observable<StripeElements>;\n  elements(stripe, options?: StripeElementsOptions): Observable<StripeElements>;\n  elements(stripe, options = {}): Observable<StripeElements> {\n    if (stripe) {\n      if (Object.keys(options).length > 0) {\n        return stripe.elements(options);\n      }\n      return stripe.elements();\n    } else {\n      if (Object.keys(options).length > 0) {\n        return this.stripeService.elements(options);\n      }\n      return this.stripeService.elements();\n    }\n  }\n\n  paymentRequest(stripe, options: PaymentRequestOptions): PaymentRequest {\n    return stripe ? stripe.paymentRequest(options) : this.stripeService.paymentRequest(options);\n  }\n\n  mergeOptions(options: StripeCardElementOptions, containerClass: string): StripeCardElementOptions;\n  mergeOptions(options: StripeCardNumberElementOptions, containerClass: string): StripeCardNumberElementOptions;\n  mergeOptions(options: StripeCardExpiryElementOptions, containerClass: string): StripeCardExpiryElementOptions;\n  mergeOptions(options: StripeFpxBankElementOptions, containerClass: string): StripeFpxBankElementOptions;\n  mergeOptions(options: StripeIbanElementOptions, containerClass: string): StripeIbanElementOptions;\n  mergeOptions(options: StripeIdealBankElementOptions, containerClass: string): StripeIdealBankElementOptions;\n  mergeOptions(options: StripeAuBankAccountElementOptions, containerClass: string): StripeAuBankAccountElementOptions;\n  mergeOptions(options: StripeAffirmMessageElementOptions, containerClass: string): StripeAffirmMessageElementOptions;\n  mergeOptions(\n    options: StripeAfterpayClearpayMessageElementOptions,\n    containerClass: string\n  ): StripeAfterpayClearpayMessageElementOptions;\n  mergeOptions(options: StripeEpsBankElementOptions, containerClass: string): StripeEpsBankElementOptions;\n  mergeOptions(options: StripeP24BankElementOptions, containerClass: string): StripeP24BankElementOptions;\n  mergeOptions(options: StripeAddressElementOptions, containerClass: string): StripeAddressElementOptions;\n  mergeOptions(\n    options: StripeLinkAuthenticationElementOptions,\n    containerClass: string\n  ): StripeLinkAuthenticationElementOptions;\n  mergeOptions(\n    options: StripeIssuingCardNumberDisplayElementOptions,\n    containerClass: string\n  ): StripeIssuingCardNumberDisplayElementOptions;\n  mergeOptions(\n    options: StripeIssuingCardCvcDisplayElementOptions,\n    containerClass: string\n  ): StripeIssuingCardCvcDisplayElementOptions;\n  mergeOptions(\n    options: StripeIssuingCardExpiryDisplayElementOptions,\n    containerClass: string\n  ): StripeIssuingCardExpiryDisplayElementOptions;\n  mergeOptions(\n    options: StripeIssuingCardPinDisplayElementOptions,\n    containerClass: string\n  ): StripeIssuingCardPinDisplayElementOptions;\n  mergeOptions(\n    options: StripePaymentMethodMessagingElementOptions,\n    containerClass: string\n  ): StripePaymentMethodMessagingElementOptions;\n  mergeOptions(\n    options: StripePaymentRequestButtonElementOptions,\n    containerClass: string\n  ): StripePaymentRequestButtonElementOptions;\n  mergeOptions(options: StripePaymentElementOptions, containerClass: string): StripePaymentElementOptions;\n  mergeOptions(options: StripeExpressCheckoutElementOptions, containerClass: string): StripeExpressCheckoutElementOptions;\n  mergeOptions(options, containerClass: string) {\n    if (!containerClass || (options && options.classes)) {\n      return options || {};\n    }\n\n    if (!options || !options.classes) {\n      return {\n        ...(options || {}),\n        classes: {\n          base: containerClass,\n          complete: `${containerClass}--complete`,\n          empty: `${containerClass}--empty`,\n          focus: `${containerClass}--focus`,\n          invalid: `${containerClass}--invalid`,\n          webkitAutoFill: `${containerClass}--webkit-autoFill`\n        }\n      };\n    }\n\n    return options || {};\n  }\n}\n","import { Directive, Input, OnInit, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\n\nimport { StripeElements, StripeElementsOptions } from '@stripe/stripe-js';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Directive({\n  selector: 'ngx-stripe-elements,[ngxStripeElements]',\n  standalone: true\n})\nexport class StripeElementsDirective implements OnInit, OnChanges {\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() elements = new EventEmitter<StripeElements>();\n\n  _elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const elementsOptions = this.elementsOptions;\n    const stripe = this.stripe;\n\n    if (changes.elementsOptions || changes.stripe || !this._elements) {\n      this._elements = await this.stripeElementsService.elements(stripe, elementsOptions).toPromise();\n      this.elements.emit(this._elements);\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this._elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.elements.emit(this._elements);\n\n      this.state = 'ready';\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeAddressElement,\n  StripeAddressElementOptions,\n  StripeAddressElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-address',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeAddressComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeAddressElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeAddressElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeAddressElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeAddressElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n  @Output() loaderror = new EventEmitter<void>();\n  @Output() loaderstart = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeAddressElementOptions>): StripeAddressElement {\n    return this.element.update(options);\n  }\n\n  getValue(): Promise<Pick<StripeAddressElementChangeEvent, 'complete' | 'isNewAddress' | 'value'>> {\n    const address = this.elements.getElement('address');\n    return address.getValue();\n  }\n\n  /**\n   * @deprecated\n   */\n  getAddressElement() {\n    return this.element;\n  }\n\n  private createElement(options: StripeAddressElementOptions) {\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('address', options);\n    this.element.on('change', (ev: StripeAddressElementChangeEvent) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.on('loaderror', () => this.loaderror.emit());\n    this.element.on('loaderstart', () => this.loaderstart.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeAffirmMessageElement,\n  StripeAffirmMessageElementOptions\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-affirm-message',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeAffirmMessageComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeAffirmMessageElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeAffirmMessageElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeAffirmMessageElement>();\n  @Output() ready = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeAffirmMessageElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getAffirmMessage() {\n    return this.element;\n  }\n\n  private createElement(options: StripeAffirmMessageElementOptions) {\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('affirmMessage', options);\n    this.element.on('ready', () => this.ready.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeAfterpayClearpayMessageElementOptions,\n  StripeAfterpayClearpayMessageElement\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-afterpay-clearpay-message',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeAfterpayClearpayMessageComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeAfterpayClearpayMessageElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeAfterpayClearpayMessageElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeAfterpayClearpayMessageElement>();\n  @Output() ready = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeAfterpayClearpayMessageElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getAfterpayClearpayMessage() {\n    return this.element;\n  }\n\n  private createElement(options: StripeAfterpayClearpayMessageElementOptions) {\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('afterpayClearpayMessage', options);\n    this.element.on('ready', () => this.ready.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeCardElementOptions,\n  StripeCardElement,\n  StripeElements,\n  StripeCardElementChangeEvent,\n  StripeCardElementUpdateOptions\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeCardComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeCardElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: StripeCardElementUpdateOptions) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCard() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeCardElementOptions> = {}) {\n    this.state = 'ready';\n    this.cdr.detectChanges();\n\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('card', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { Directive, Input, OnInit, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\n\nimport {\n  StripeCardCvcElement,\n  StripeCardCvcElementChangeEvent,\n  StripeCardExpiryElement,\n  StripeCardExpiryElementChangeEvent,\n  StripeCardNumberElement,\n  StripeCardNumberElementChangeEvent,\n  StripeElements,\n  StripeElementsOptions\n} from '@stripe/stripe-js';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\ntype NgxStripeCardGroupChangeEvent =\n  | StripeCardNumberElementChangeEvent\n  | StripeCardExpiryElementChangeEvent\n  | StripeCardCvcElementChangeEvent;\n\ntype NgxStripeCardGroupElements = StripeCardNumberElement | StripeCardExpiryElement | StripeCardCvcElement;\n\n@Directive({\n  selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]',\n  standalone: true\n})\nexport class StripeCardGroupDirective implements OnInit, OnChanges {\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() elements = new EventEmitter<StripeElements>();\n\n  @Output() load = new EventEmitter<NgxStripeCardGroupElements>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<NgxStripeCardGroupChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  _elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const elementsOptions = this.elementsOptions;\n    const stripe = this.stripe;\n\n    if (changes.elementsOptions || changes.stripe || !this._elements) {\n      this._elements = await this.stripeElementsService.elements(stripe, elementsOptions).toPromise();\n      this.elements.emit(this._elements);\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this._elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.elements.emit(this._elements);\n\n      this.state = 'ready';\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardNumberElement,\n  StripeCardNumberElementOptions,\n  StripeCardNumberElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-number',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container\n        *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\"\n        [ngTemplateOutlet]=\"loadingTemplate\"\n      ></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeCardNumberComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardNumberElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardNumberElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardNumberElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardNumberElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() public cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe((elements: StripeElements) => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else {\n      throw new Error('StripeCardNumberComponent must have StripeCardGroupDirective parent');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardNumberElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardNumber() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardNumber', options);\n      this.element.on('change', (ev) => {\n        this.change.emit(ev);\n        this.cardGroup?.change.emit(ev);\n      });\n      this.element.on('blur', () => {\n        this.blur.emit();\n        this.cardGroup?.blur.emit();\n      });\n      this.element.on('focus', () => {\n        this.focus.emit();\n        this.cardGroup?.focus.emit();\n      });\n      this.element.on('ready', () => {\n        this.ready.emit();\n        this.cardGroup?.ready.emit();\n      });\n      this.element.on('escape', () => {\n        this.escape.emit();\n        this.cardGroup?.escape.emit();\n      });\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n      this.cardGroup?.load.emit(this.element);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardExpiryElement,\n  StripeCardExpiryElementOptions,\n  StripeCardExpiryElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-expiry',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container\n        *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\"\n        [ngTemplateOutlet]=\"loadingTemplate\"\n      ></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeCardExpiryComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardExpiryElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardExpiryElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardExpiryElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardExpiryElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() public cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe((elements: StripeElements) => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else {\n      throw new Error('StripeCardExpiryComponent must have StripeCardGroupDirective parent');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardExpiryElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardExpiry() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardExpiry', options);\n      this.element.on('change', (ev) => {\n        this.change.emit(ev);\n        this.cardGroup?.change.emit(ev);\n      });\n      this.element.on('blur', () => {\n        this.blur.emit();\n        this.cardGroup?.blur.emit();\n      });\n      this.element.on('focus', () => {\n        this.focus.emit();\n        this.cardGroup?.focus.emit();\n      });\n      this.element.on('ready', () => {\n        this.ready.emit();\n        this.cardGroup?.ready.emit();\n      });\n      this.element.on('escape', () => {\n        this.escape.emit();\n        this.cardGroup?.escape.emit();\n      });\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n      this.cardGroup?.load.emit(this.element);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardCvcElement,\n  StripeCardCvcElementChangeEvent,\n  StripeCardCvcElementOptions\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-cvc',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container\n        *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\"\n        [ngTemplateOutlet]=\"loadingTemplate\"\n      ></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeCardCvcComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardCvcElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardCvcElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardCvcElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardCvcElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() public cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe((elements: StripeElements) => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else {\n      throw new Error('StripeCardCvcComponent must have StripeCardGroupDirective parent');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardCvcElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardCvc() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardCvc', options);\n      this.element.on('change', (ev) => {\n        this.change.emit(ev);\n        this.cardGroup?.change.emit(ev);\n      });\n      this.element.on('blur', () => {\n        this.blur.emit();\n        this.cardGroup?.blur.emit();\n      });\n      this.element.on('focus', () => {\n        this.focus.emit();\n        this.cardGroup?.focus.emit();\n      });\n      this.element.on('ready', () => {\n        this.ready.emit();\n        this.cardGroup?.ready.emit();\n      });\n      this.element.on('escape', () => {\n        this.escape.emit();\n        this.cardGroup?.escape.emit();\n      });\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n      this.cardGroup?.load.emit(this.element);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeEpsBankElementOptions,\n  StripeEpsBankElement,\n  StripeEpsBankElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-eps-bank',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeEpsBankComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeEpsBankElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeEpsBankElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeEpsBankElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeEpsBankElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeEpsBankElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getEpsBankelement() {\n    return this.element;\n  }\n\n  private createElement(options: StripeEpsBankElementOptions) {\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('epsBank', options);\n    this.element.on('change', (ev: StripeEpsBankElementChangeEvent) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeExpressCheckoutElement,\n  StripeExpressCheckoutElementOptions,\n  StripeExpressCheckoutElementReadyEvent,\n  StripeError,\n  StripeExpressCheckoutElementUpdateOptions,\n  StripeExpressCheckoutElementClickEvent,\n  StripeExpressCheckoutElementConfirmEvent,\n  StripeExpressCheckoutElementShippingAddressChangeEvent,\n  StripeExpressCheckoutElementShippingRateChangeEvent\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\nexport type NgxStripeExpressCheckoutElementLoadErrorEvent = {\n    elementType: 'expressCheckout';\n    error: StripeError;\n}\n\n@Component({\n  selector: 'ngx-stripe-express-checkout',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeExpressCheckoutComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeExpressCheckoutElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeExpressCheckoutElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeExpressCheckoutElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() cancel = new EventEmitter<void>();\n  @Output() clicked = new EventEmitter<StripeExpressCheckoutElementClickEvent>();\n  @Output() confirm = new EventEmitter<StripeExpressCheckoutElementConfirmEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<StripeExpressCheckoutElementReadyEvent>();\n  @Output() escape = new EventEmitter<void>();\n  @Output() loaderror = new EventEmitter<NgxStripeExpressCheckoutElementLoadErrorEvent>();\n  @Output() shippingaddresschange = new EventEmitter<StripeExpressCheckoutElementShippingAddressChangeEvent>();\n  @Output() shippingratechange = new EventEmitter<StripeExpressCheckoutElementShippingRateChangeEvent>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: StripeExpressCheckoutElementUpdateOptions): StripeExpressCheckoutElement {\n    return this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getLinkAuthenticationElement() {\n    return this.element;\n  }\n\n  private createElement(options: StripeExpressCheckoutElementOptions) {\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('expressCheckout', options);\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('cancel', () => this.cancel.emit());\n    this.element.on('click', (ev: StripeExpressCheckoutElementClickEvent) => this.clicked.emit(ev));\n    this.element.on('confirm', (ev: StripeExpressCheckoutElementConfirmEvent) => this.confirm.emit(ev));\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', (ev: StripeExpressCheckoutElementReadyEvent) => this.ready.emit(ev));\n    this.element.on('escape', () => this.escape.emit());\n    this.element.on('loaderror', (err: NgxStripeExpressCheckoutElementLoadErrorEvent) => this.loaderror.emit(err));\n    this.element.on('shippingaddresschange', (ev: StripeExpressCheckoutElementShippingAddressChangeEvent) => this.shippingaddresschange.emit(ev));\n    this.element.on('shippingratechange', (ev: StripeExpressCheckoutElementShippingRateChangeEvent) => this.shippingratechange.emit(ev));\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeFpxBankElement,\n  StripeFpxBankElementChangeEvent,\n  StripeFpxBankElementOptions\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-fpx-bank',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeFpxBankComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeFpxBankElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeFpxBankElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeFpxBankElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeFpxBankElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeFpxBankElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getFpxBank() {\n    return this.element;\n  }\n\n  private createElement(options: StripeFpxBankElementOptions = { accountHolderType: 'individual' }) {\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('fpxBank', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIbanElement,\n  StripeIbanElementOptions,\n  StripeIbanElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-iban',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeIbanComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIbanElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeIbanElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeIbanElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeIbanElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeIbanElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getIban() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeIbanElementOptions> = {}) {\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('iban', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIdealBankElement,\n  StripeIdealBankElementOptions,\n  StripeIdealBankElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-ideal-bank',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeIdealBankComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIdealBankElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeIdealBankElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeIdealBankElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeIdealBankElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeIdealBankElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getIdealBank() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeIdealBankElementOptions> = {}) {\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('idealBank', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIssuingCardCvcDisplayElement,\n  StripeIssuingCardCvcDisplayElementOptions\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-issuing-card-cvc-display',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeIssuingCardCvcDisplayComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIssuingCardCvcDisplayElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeIssuingCardCvcDisplayElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeIssuingCardCvcDisplayElement>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeIssuingCardCvcDisplayElementOptions>) {\n    this.element.update(options);\n  }\n\n  private createElement(options: StripeIssuingCardCvcDisplayElementOptions) {\n    this.state = 'ready';\n    this.cdr.detectChanges();\n\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('issuingCardCvcDisplay', options);\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIssuingCardExpiryDisplayElement,\n  StripeIssuingCardExpiryDisplayElementOptions\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-issuing-card-expiry-display',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeIssuingCardExpiryDisplayComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIssuingCardExpiryDisplayElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeIssuingCardExpiryDisplayElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeIssuingCardExpiryDisplayElement>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeIssuingCardExpiryDisplayElementOptions>) {\n    this.element.update(options);\n  }\n\n  private createElement(options: StripeIssuingCardExpiryDisplayElementOptions) {\n    this.state = 'ready';\n    this.cdr.detectChanges();\n\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('issuingCardExpiryDisplay', options);\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIssuingCardNumberDisplayElementOptions,\n  StripeIssuingCardNumberDisplayElement\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-issuing-card-number-display',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeIssuingCardNumberDisplayComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIssuingCardNumberDisplayElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeIssuingCardNumberDisplayElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeIssuingCardNumberDisplayElement>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeIssuingCardNumberDisplayElementOptions>) {\n    this.element.update(options);\n  }\n\n  private createElement(options: StripeIssuingCardNumberDisplayElementOptions) {\n    this.state = 'ready';\n    this.cdr.detectChanges();\n\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('issuingCardNumberDisplay', options);\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIssuingCardPinDisplayElement,\n  StripeIssuingCardPinDisplayElementOptions\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-issuing-card-pin-display',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeIssuingCardPinDisplayComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIssuingCardPinDisplayElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeIssuingCardPinDisplayElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeIssuingCardPinDisplayElement>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeIssuingCardPinDisplayElementOptions>) {\n    this.element.update(options);\n  }\n\n  private createElement(options: StripeIssuingCardPinDisplayElementOptions) {\n    this.state = 'ready';\n    this.cdr.detectChanges();\n\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('issuingCardPinDisplay', options);\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeLinkAuthenticationElementOptions,\n  StripeLinkAuthenticationElement,\n  StripeLinkAuthenticationElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-link-authentication',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeLinkAuthenticationComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeLinkAuthenticationElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeLinkAuthenticationElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeLinkAuthenticationElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeLinkAuthenticationElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n  @Output() loaderror = new EventEmitter<void>();\n  @Output() loaderstart = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @deprecated\n   */\n  getLinkAuthenticationElement() {\n    return this.element;\n  }\n\n  private createElement(options: StripeLinkAuthenticationElementOptions) {\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('linkAuthentication', options);\n    this.element.on('change', (ev: StripeLinkAuthenticationElementChangeEvent) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.on('loaderror', () => this.loaderror.emit());\n    this.element.on('loaderstart', () => this.loaderstart.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeP24BankElementOptions,\n  StripeP24BankElementChangeEvent,\n  StripeP24BankElement\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-p24-bank',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeP24BankComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeP24BankElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeP24BankElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeP24BankElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeP24BankElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeP24BankElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getP24Bankelement() {\n    return this.element;\n  }\n\n  private createElement(options: StripeP24BankElementOptions) {\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('p24Bank', options);\n    this.element.on('change', (ev: StripeP24BankElementChangeEvent) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeAuBankAccountElement,\n  StripeAuBankAccountElementOptions,\n  StripeAuBankAccountElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-au-bank-account',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripeAuBankAccountComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeAuBankAccountElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeAuBankAccountElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripeAuBankAccountElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeAuBankAccountElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeAuBankAccountElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getAuBankAccount() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeAuBankAccountElementOptions> = {}) {\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('auBankAccount', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  OnChanges,\n  OnDestroy,\n  Input,\n  ViewChild,\n  ElementRef,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  Optional,\n  OnInit\n} from '@angular/core';\nimport { Subscription, from } from 'rxjs';\n\nimport {\n  Appearance,\n  StripeElements,\n  StripeElementsOptions,\n  StripeError,\n  StripePaymentElement,\n  StripePaymentElementChangeEvent,\n  StripePaymentElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-payment',\n  standalone: true,\n  template: `<div class=\"field\" #stripeElementRef></div>`,\n  imports: [CommonModule]\n})\nexport class StripePaymentElementComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripePaymentElement;\n  elements: StripeElements;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripePaymentElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Input() appearance: Appearance;\n  @Input() clientSecret: string;\n  @Input() doNotCreateUntilClientSecretIsSet = false;\n\n  @Output() load = new EventEmitter<StripePaymentElement>();\n\n  @Output() blur = new EventEmitter<{ elementType: 'payment' }>();\n  @Output() change = new EventEmitter<StripePaymentElementChangeEvent>();\n  @Output() focus = new EventEmitter<{ elementType: 'payment' }>();\n  @Output() ready = new EventEmitter<{ elementType: 'payment' }>();\n  @Output() escape = new EventEmitter<{ elementType: 'payment' }>();\n  @Output() loaderror = new EventEmitter<{\n    elementType: 'payment';\n    error: StripeError;\n  }>();\n\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (\n      !this.elementsProvider &&\n      (changes.elementsOptions || changes.stripe || changes.clientSecret || changes.appearance || !this.elements)\n    ) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, {\n        ...(this.elementsOptions || {}),\n        ...(this.appearance ? { appearance: this.appearance } : {}),\n        ...(this.clientSecret ? { clientSecret: this.clientSecret } : {})\n      } as StripeElementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe, {\n        ...(this.elementsOptions || {}),\n        ...(this.appearance ? { appearance: this.appearance } : {}),\n        ...(this.clientSecret ? { clientSecret: this.clientSecret } : {})\n      } as StripeElementsOptions).toPromise();\n      this.createElement(options);\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripePaymentElementOptions>): StripePaymentElement {\n    return this.element.update(options);\n  }\n\n  collapse(): StripePaymentElement {\n    return this.element.collapse();\n  }\n\n  fetchUpdates() {\n    return from(this.elements.fetchUpdates());\n  }\n\n  private createElement(options: Partial<StripePaymentElementOptions> = {}) {\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    try {\n      this.element = this.elements.create('payment', options);\n    } catch (err) {\n      this.elements = null;\n      throw err;\n    }\n\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', (ev) => this.blur.emit(ev));\n    this.element.on('focus', (ev) => this.focus.emit(ev));\n    this.element.on('ready', (ev) => this.ready.emit(ev));\n    this.element.on('escape', (ev) => this.escape.emit(ev));\n    this.element.on('loaderror', (ev) => this.loaderror.emit(ev));\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripePaymentMethodMessagingElement,\n  StripePaymentMethodMessagingElementOptions\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-payment-method-messaging',\n  standalone: true,\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `,\n  imports: [CommonModule]\n})\nexport class StripePaymentMethodMessagingComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripePaymentMethodMessagingElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripePaymentMethodMessagingElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<StripePaymentMethodMessagingElement>();\n  @Output() ready = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      this.elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      updateElements = true;\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripePaymentMethodMessagingElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getPaymentMethodMessaging() {\n    return this.element;\n  }\n\n  private createElement(options: StripePaymentMethodMessagingElementOptions) {\n    if (this.element) {\n      this.element.unmount();\n    }\n\n    this.element = this.elements.create('paymentMethodMessaging', options);\n    this.element.on('ready', () => this.ready.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport { Observable, from, Subscription } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  PaymentRequestOptions,\n  PaymentRequest,\n  CanMakePaymentResult,\n  PaymentRequestUpdateOptions,\n  StripePaymentRequestButtonElement,\n  StripePaymentRequestButtonElementOptions,\n  StripePaymentRequestButtonElementClickEvent,\n  PaymentRequestTokenEvent,\n  PaymentRequestPaymentMethodEvent,\n  PaymentRequestSourceEvent,\n  PaymentRequestShippingAddressEvent,\n  PaymentRequestShippingOptionEvent\n} from '@stripe/stripe-js';\n\nimport { StripeElementsDirective } from '../directives/elements.directive';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-payment-request-button',\n  standalone: true,\n  template: `<div class=\"field\" #stripeElementRef></div>`,\n  imports: [CommonModule]\n})\nexport class StripePaymentRequestButtonComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripePaymentRequestButtonElement;\n  paymentRequest!: PaymentRequest;\n\n  @Input() containerClass: string;\n  @Input() paymentOptions: PaymentRequestOptions;\n  @Input() options: StripePaymentRequestButtonElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeServiceInterface;\n\n  @Output() load = new EventEmitter<{\n    paymentRequestButton: StripePaymentRequestButtonElement;\n    paymentRequest: PaymentRequest;\n  }>();\n\n  @Output() change = new EventEmitter<StripePaymentRequestButtonElementClickEvent>();\n  @Output() blur = new EventEmitter<void>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n\n  @Output() token = new EventEmitter<PaymentRequestTokenEvent>();\n  @Output() paymentMethod = new EventEmitter<PaymentRequestPaymentMethodEvent>();\n  @Output() source = new EventEmitter<PaymentRequestSourceEvent>();\n  @Output() cancel = new EventEmitter<void>();\n  @Output() shippingaddresschange = new EventEmitter<PaymentRequestShippingAddressEvent>();\n  @Output() shippingoptionchange = new EventEmitter<PaymentRequestShippingOptionEvent>();\n  @Output() notavailable = new EventEmitter<void>();\n\n  elements: StripeElements;\n  private state: 'notready' | 'starting' | 'ready' = 'notready';\n  private elementsSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private elementsProvider: StripeElementsDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n    let updateElements = false;\n\n    if (!this.elementsProvider && (changes.elementsOptions || changes.stripe || !this.elements)) {\n      const elements = await this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n      this.elements = elements;\n      updateElements = true;\n    }\n\n    if (changes.paymentOptions && this.paymentRequest) {\n      this.updateRequest(this.paymentOptions);\n    }\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    if (changes.options || changes.containerClass || !this.element || updateElements) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n  }\n\n  async ngOnInit() {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.elementsProvider) {\n      this.elementsSubscription = this.elementsProvider.elements.subscribe((elements) => {\n        this.elements = elements;\n        this.createElement(options);\n        this.state = 'ready';\n      });\n    } else if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService.elements(this.stripe).toPromise();\n      this.createElement(options);\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.elementsSubscription) {\n      this.elementsSubscription.unsubscribe();\n    }\n  }\n\n  canMakePayment(): Observable<CanMakePaymentResult | null> {\n    return from(this.paymentRequest.canMakePayment());\n  }\n\n  update(options: Partial<StripePaymentRequestButtonElementOptions>) {\n    this.element.update(options);\n  }\n\n  updateRequest(options: PaymentRequestUpdateOptions) {\n    const { currency, total, displayItems, shippingOptions } = options;\n\n    this.paymentRequest.update({\n      currency,\n      total,\n      displayItems,\n      shippingOptions\n    });\n  }\n\n  show(): void {\n    this.paymentRequest.show();\n  }\n\n  abort(): void {\n    this.paymentRequest.abort();\n  }\n\n  isShowing(): boolean {\n    return this.paymentRequest.isShowing();\n  }\n\n  /**\n   * @deprecated\n   */\n  getButton() {\n    return this.element;\n  }\n\n  private async createElement(options: Partial<StripePaymentRequestButtonElementOptions> = {}) {\n    this.paymentRequest = this.stripeElementsService.paymentRequest(this.stripe, this.paymentOptions);\n    this.paymentRequest.on('token', (ev) => this.token.emit(ev));\n    if (this.paymentMethod.observed) this.paymentRequest.on('paymentmethod', (ev) => this.paymentMethod.emit(ev));\n    if (this.source.observed && !this.paymentMethod.observed)\n      this.paymentRequest.on('source', (ev) => this.source.emit(ev));\n    this.paymentRequest.on('cancel', () => this.cancel.emit());\n    this.paymentRequest.on('shippingaddresschange', (ev) => this.shippingaddresschange.emit(ev));\n    this.paymentRequest.on('shippingoptionchange', (ev) => this.shippingoptionchange.emit(ev));\n\n    if (this.element) {\n      this.element.unmount();\n    }\n    this.element = this.elements.create('paymentRequestButton', {\n      paymentRequest: this.paymentRequest,\n      ...options\n    });\n\n    const result = await this.paymentRequest.canMakePayment();\n    if (result) {\n      this.element.on('click', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit({\n        paymentRequestButton: this.element,\n        paymentRequest: this.paymentRequest\n      });\n    } else {\n      this.notavailable.emit();\n    }\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nimport { NGX_STRIPE_VERSION, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY } from '../interfaces/ngx-stripe.interface';\n\nimport { LazyStripeAPILoader } from './api-loader.service';\nimport { WindowRef } from './window-ref.service';\n\nimport { StripeInstance } from './stripe-instance.class';\n\n@Injectable()\nexport class StripeFactoryService {\n  constructor(\n    @Inject(NGX_STRIPE_VERSION) public version: string,\n    @Inject(STRIPE_PUBLISHABLE_KEY) public baseKey: string,\n    @Inject(STRIPE_OPTIONS) public baseOptions: StripeConstructorOptions,\n    public loader: LazyStripeAPILoader,\n    public window: WindowRef\n  ) {}\n\n  public create(key?: string, options?: StripeConstructorOptions): StripeInstance {\n    if (!key && !this.baseKey) {\n      throw new Error(\n        'No key defined! Either you need to pass it as a parameter or define it when you call NgxStripeModule.forRoot()'\n      );\n    }\n\n    return new StripeInstance(this.version, this.loader, this.window, key || this.baseKey, options || this.baseOptions);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { EnvironmentProviders, makeEnvironmentProviders, ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nimport { StripeAddressComponent } from './components/address.component';\nimport { StripeAffirmMessageComponent } from './components/affirm-message.component';\nimport { StripeAfterpayClearpayMessageComponent } from './components/afterpay-clearpay-message.component';\nimport { StripeCardComponent } from './components/card.component';\nimport { StripeCardNumberComponent } from './components/card-number.component';\nimport { StripeCardExpiryComponent } from './components/card-expiry.component';\nimport { StripeCardCvcComponent } from './components/card-cvc.component';\nimport { StripeEpsBankComponent } from './components/eps-bank.component';\nimport { StripeExpressCheckoutComponent } from './components/express-checkout.component';\nimport { StripeFpxBankComponent } from './components/fpx-bank.component';\nimport { StripeIbanComponent } from './components/iban.component';\nimport { StripeIdealBankComponent } from './components/ideal-bank.component';\nimport { StripeIssuingCardCvcDisplayComponent } from './components/issuing-card-cvc.component';\nimport { StripeIssuingCardExpiryDisplayComponent } from './components/issuing-card-expiry.component';\nimport { StripeIssuingCardNumberDisplayComponent } from './components/issuing-card-number.component';\nimport { StripeIssuingCardPinDisplayComponent } from './components/issuing-card-pin.component';\nimport { StripeLinkAuthenticationComponent } from './components/link-authentication.component';\nimport { StripeP24BankComponent } from './components/p24-bank.component';\nimport { StripeAuBankAccountComponent } from './components/au-bank-account.component';\nimport { StripePaymentElementComponent } from './components/payment-element.component';\nimport { StripePaymentMethodMessagingComponent } from './components/payment-method-messaging.component';\nimport { StripePaymentRequestButtonComponent } from './components/payment-request-button.component';\n\nimport { StripeCardGroupDirective } from './directives/card-group.directive';\nimport { StripeElementsDirective } from './directives/elements.directive';\nimport { NgxStripeElementLoadingTemplateDirective } from './directives/stripe-element-loading-template.directive';\n\nimport { NGX_STRIPE_VERSION, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY } from './interfaces/ngx-stripe.interface';\n\nimport { LazyStripeAPILoader } from './services/api-loader.service';\nimport { WindowRef } from './services/window-ref.service';\nimport { DocumentRef } from './services/document-ref.service';\nimport { StripeService } from './services/stripe.service';\nimport { StripeFactoryService } from './services/stripe-factory.service';\nimport { StripeElementsService } from './services/stripe-elements.service';\n\nconst components = [\n  StripeAddressComponent,\n  StripeAffirmMessageComponent,\n  StripeAfterpayClearpayMessageComponent,\n  StripeCardComponent,\n  StripeCardNumberComponent,\n  StripeCardExpiryComponent,\n  StripeCardCvcComponent,\n  StripeEpsBankComponent,\n  StripeExpressCheckoutComponent,\n  StripeFpxBankComponent,\n  StripeIbanComponent,\n  StripeIdealBankComponent,\n  StripeIssuingCardCvcDisplayComponent,\n  StripeIssuingCardExpiryDisplayComponent,\n  StripeIssuingCardNumberDisplayComponent,\n  StripeIssuingCardPinDisplayComponent,\n  StripeLinkAuthenticationComponent,\n  StripeP24BankComponent,\n  StripeAuBankAccountComponent,\n  StripePaymentElementComponent,\n  StripePaymentMethodMessagingComponent,\n  StripePaymentRequestButtonComponent\n];\n\nconst directives = [StripeCardGroupDirective, StripeElementsDirective, NgxStripeElementLoadingTemplateDirective];\n\nconst currentVersion = '16.3.1';\n\nfunction _provideNgxStripe(publishableKey?: string, options?: StripeConstructorOptions) {\n  return [\n    LazyStripeAPILoader,\n    StripeService,\n    StripeFactoryService,\n    StripeElementsService,\n    WindowRef,\n    DocumentRef,\n    {\n      provide: STRIPE_PUBLISHABLE_KEY,\n      useValue: publishableKey\n    },\n    {\n      provide: STRIPE_OPTIONS,\n      useValue: options\n    },\n    {\n      provide: NGX_STRIPE_VERSION,\n      useValue: currentVersion\n    }\n  ];\n}\n\n/**\n * Provides the global NgxStripe providers and initializes.\n *\n * @usageNotes\n *\n * ### Providing the Global NgxStripe\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideNgxStripe(STRIPE_KEY)],\n * });\n * ```\n */\nexport function provideNgxStripe(publishableKey?: string, options?: StripeConstructorOptions): EnvironmentProviders {\n  return makeEnvironmentProviders([..._provideNgxStripe(publishableKey, options)]);\n}\n\n@NgModule({\n  exports: [...components, ...directives],\n  imports: [CommonModule, ...components, ...directives]\n})\nexport class NgxStripeModule {\n  public static forRoot(\n    publishableKey?: string,\n    options?: StripeConstructorOptions\n  ): ModuleWithProviders<NgxStripeModule> {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [..._provideNgxStripe(publishableKey, options)]\n    };\n  }\n\n  /**\n   * @deprecated\n   */\n  public static forChild(\n    publishableKey?: string,\n    options?: StripeConstructorOptions\n  ): ModuleWithProviders<NgxStripeModule> {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [..._provideNgxStripe(publishableKey, options)]\n    };\n  }\n}\n","import { inject } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nimport { STRIPE_PUBLISHABLE_KEY } from '../interfaces/ngx-stripe.interface';\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { StripeFactoryService } from '../services/stripe-factory.service';\nimport { StripeService } from '../services/stripe.service';\n\nexport function injectStripe(publishableKey?: string, options?: StripeConstructorOptions): StripeServiceInterface {\n  if (publishableKey) {\n    const factory = inject(StripeFactoryService);\n    return factory.create(publishableKey, options);\n  } else if (inject(STRIPE_PUBLISHABLE_KEY)) {\n    return inject(StripeService);\n  }\n\n  throw new Error('Publishable Key is required either global or pass as parameter');\n}\n","/*\n * Public API Surface of ngx-stripe\n */\nexport { NgxStripeModule, provideNgxStripe } from './lib/ngx-stripe.module';\n\nexport { StripeAddressComponent } from './lib/components/address.component';\nexport { StripeAffirmMessageComponent } from './lib/components/affirm-message.component';\nexport { StripeAfterpayClearpayMessageComponent } from './lib/components/afterpay-clearpay-message.component';\nexport { StripeCardComponent } from './lib/components/card.component';\nexport { StripeCardNumberComponent } from './lib/components/card-number.component';\nexport { StripeCardExpiryComponent } from './lib/components/card-expiry.component';\nexport { StripeCardCvcComponent } from './lib/components/card-cvc.component';\nexport { StripeEpsBankComponent } from './lib/components/eps-bank.component';\nexport { StripeExpressCheckoutComponent } from './lib/components/express-checkout.component';\nexport { StripeFpxBankComponent } from './lib/components/fpx-bank.component';\nexport { StripeIbanComponent } from './lib/components/iban.component';\nexport { StripeIdealBankComponent } from './lib/components/ideal-bank.component';\nexport { StripeIssuingCardCvcDisplayComponent } from './lib/components/issuing-card-cvc.component';\nexport { StripeIssuingCardExpiryDisplayComponent } from './lib/components/issuing-card-expiry.component';\nexport { StripeIssuingCardNumberDisplayComponent } from './lib/components/issuing-card-number.component';\nexport { StripeIssuingCardPinDisplayComponent } from './lib/components/issuing-card-pin.component';\nexport { StripeLinkAuthenticationComponent } from './lib/components/link-authentication.component';\nexport { StripeP24BankComponent } from './lib/components/p24-bank.component';\nexport { StripeAuBankAccountComponent } from './lib/components/au-bank-account.component';\nexport { StripePaymentElementComponent } from './lib/components/payment-element.component';\nexport { StripePaymentMethodMessagingComponent } from './lib/components/payment-method-messaging.component';\nexport { StripePaymentRequestButtonComponent } from './lib/components/payment-request-button.component';\n\nexport { StripeCardGroupDirective } from './lib/directives/card-group.directive';\nexport { StripeElementsDirective } from './lib/directives/elements.directive';\nexport { NgxStripeElementLoadingTemplateDirective } from './lib/directives/stripe-element-loading-template.directive';\n\nexport { StripeService } from './lib/services/stripe.service';\nexport { StripeFactoryService } from './lib/services/stripe-factory.service';\nexport { StripeInstance } from './lib/services/stripe-instance.class';\nexport { LazyStripeAPILoader, LazyStripeAPILoaderStatus } from './lib/services/api-loader.service';\nexport { StripeElementsService } from './lib/services/stripe-elements.service';\n\nexport { WindowRef } from './lib/services/window-ref.service';\nexport { DocumentRef } from './lib/services/document-ref.service';\n\nexport { STRIPE_PUBLISHABLE_KEY, STRIPE_OPTIONS, NGX_STRIPE_VERSION } from './lib/interfaces/ngx-stripe.interface';\nexport { StripeServiceInterface } from './lib/interfaces/stripe-instance.interface';\n\nexport { injectStripe } from './lib/utils/inject-stripe';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.WindowRef","i2.DocumentRef","i1.LazyStripeAPILoader","i2.WindowRef","i1.StripeService","i1.StripeElementsService","i2.StripeElementsDirective","i2.StripeCardGroupDirective"],"mappings":"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"}